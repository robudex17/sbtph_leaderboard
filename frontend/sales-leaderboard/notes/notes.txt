Example Design Idea
<table>
    <thead>
        <tr>
            <th>Rank</th>
            <th>Salesperson</th>
            <th>Total Sales</th>
            <th>Period</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>1</td>
            <td>Jane Doe</td>
            <td>$5000</td>
            <td>March 2024</td>
        </tr>
    </tbody>
</table>


-- Leaderboard UI
<template>
  <div class="container mx-auto">
    <h1 class="text-3xl font-bold text-center mb-5">Sales Leaderboard</h1>
    <div class="filters flex justify-between mb-5">
      <input type="text" placeholder="Search..." class="border p-2 rounded" v-model="searchQuery" />
      <select class="border p-2 rounded" v-model="selectedPeriod">
        <option value="all">All Time</option>
        <option value="month">This Month</option>
        <option value="week">This Week</option>
      </select>
    </div>
    <table class="w-full border-collapse">
      <thead>
        <tr class="bg-gray-100">
          <th class="p-3 border">Rank</th>
          <th class="p-3 border">Name</th>
          <th class="p-3 border">Total Sales</th>
          <th class="p-3 border">Period</th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="(entry, index) in filteredData" :key="entry.id" class="text-center">
          <td class="p-3 border">{{ index + 1 }}</td>
          <td class="p-3 border">{{ entry.name }}</td>
          <td class="p-3 border">{{ entry.sales | currency }}</td>
          <td class="p-3 border">{{ entry.period }}</td>
        </tr>
      </tbody>
    </table>
  </div>
</template>

<script>
export default {
  data() {
    return {
      searchQuery: "",
      selectedPeriod: "all",
      leaderboardData: [
        { id: 1, name: "Jane Doe", sales: 5000, period: "March 2024" },
        { id: 2, name: "John Smith", sales: 4500, period: "March 2024" },
        // ...more data
      ],
    };
  },
  computed: {
    filteredData() {
      return this.leaderboardData.filter((entry) =>
        entry.name.toLowerCase().includes(this.searchQuery.toLowerCase())
      );
    },
  },
};
</script>

<style>
/* Add TailwindCSS or your own styles */
</style>


--SAMPLE IMPLIMENTATION

<template>
  <div class="container mx-auto">
    <!-- Header -->
    <h1 class="text-3xl font-bold text-center mb-5">Sales Leaderboard</h1>

    <!-- Toggle Button -->
    <div class="flex justify-center mb-5">
      <button
        @click="toggleView"
        class="px-4 py-2 border rounded shadow-md"
        :class="viewMode === 'card' ? 'bg-blue-500 text-white' : 'bg-gray-200'"
      >
        Card View
      </button>
      <button
        @click="toggleView"
        class="px-4 py-2 border rounded shadow-md ml-2"
        :class="viewMode === 'table' ? 'bg-blue-500 text-white' : 'bg-gray-200'"
      >
        Table View
      </button>
    </div>

    <!-- Leaderboard Display -->
    <div>
      <!-- Card View -->
      <div v-if="viewMode === 'card'" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
        <div
          v-for="entry in leaderboardData"
          :key="entry.id"
          class="p-4 border rounded shadow-lg bg-white"
        >
          <h2 class="text-xl font-bold">{{ entry.name }}</h2>
          <p>Total Sales: {{ entry.sales | currency }}</p>
          <p>Rank: {{ entry.rank }}</p>
          <p>Period: {{ entry.period }}</p>
        </div>
      </div>

      <!-- Table View -->
      <div v-if="viewMode === 'table'">
        <table class="w-full border-collapse">
          <thead>
            <tr class="bg-gray-100">
              <th class="p-3 border">Rank</th>
              <th class="p-3 border">Name</th>
              <th class="p-3 border">Total Sales</th>
              <th class="p-3 border">Period</th>
            </tr>
          </thead>
          <tbody>
            <tr v-for="entry in leaderboardData" :key="entry.id" class="text-center">
              <td class="p-3 border">{{ entry.rank }}</td>
              <td class="p-3 border">{{ entry.name }}</td>
              <td class="p-3 border">{{ entry.sales | currency }}</td>
              <td class="p-3 border">{{ entry.period }}</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</template>

<script>
export default {
  data() {
    return {
      viewMode: "card", // Default mode is card
      leaderboardData: [
        { id: 1, rank: 1, name: "Jane Doe", sales: 5000, period: "March 2024" },
        { id: 2, rank: 2, name: "John Smith", sales: 4500, period: "March 2024" },
        { id: 3, rank: 3, name: "Emily Johnson", sales: 4300, period: "March 2024" },
      ],
    };
  },
  methods: {
    toggleView() {
      this.viewMode = this.viewMode === "card" ? "table" : "card";
    },
  },
  filters: {
    currency(value) {
      return `$${value.toLocaleString()}`;
    },
  },
};
</script>

<style>
/* TailwindCSS is recommended, but you can add custom styles here */
</style>
